{% set isDebug = craft.app.request.getParam('debug') %}
{% set page = {
    'id': null,
    'revisionId': null,
    'uid': null,
} %}
{% if entry is defined %}
    {% set page = entry %}
{% elseif category is defined %}
    {% set page = category %}
{% elseif product is defined %}
    {% set page = product %}
{% endif %}

{% if craft.app.config.env == 'dev' or craft.app.config.env == 'staging' %}
    {% if currentUser and currentUser['admin'] %}
        {% header "Feature-Policy:  oversized-images 'self'(2.0) *(inf); unoptimized-lossy-images 'self'(0.5) *(inf); unoptimized-lossless-images 'self'(1) *(inf); unoptimized-lossless-images-strict 'self'(1) *(inf);" %}
    {% endif %}
{% endif %}

{% if craft.imager.serverSupportsWebp() and craft.imager.clientSupportsWebp() %}
    {% set imageFormat = 'webp' %}
{% else %}
    {% set imageFormat = 'jpg' %}
{% endif %}

{% set data = {
    "classes": [
        {
            "value": "Barbarian",
            "label": "Barbarian"
        },
        {
            "value": "Bard",
            "label": "Bard"
        },
        {
            "value": "Cleric",
            "label": "Cleric"
        },
        {
            "value": "Druid",
            "label": "Druid"
        },
        {
            "value": "Fighter",
            "label": "Fighter"
        },
        {
            "value": "Monk",
            "label": "Monk"
        },
        {
            "value": "Paladin",
            "label": "Paladin"
        },
        {
            "value": "Ranger",
            "label": "Ranger"
        },
        {
            "value": "Rogue",
            "label": "Rogue"
        },
        {
            "value": "Sorcerer",
            "label": "Sorcerer"
        },
        {
            "value": "Warlock",
            "label": "Warlock"
        },
        {
            "value": "Wizard",
            "label": "Wizard"
        },
    ],
    "races": [
        {
            "value": "Dragonborn",
            "label": "Dragonborn"
        },
        {
            "value": "Dwarf",
            "label": "Dwarf"
        },
        {
            "value": "Hill Dwarf",
            "label": "Hill Dwarf"
        },
        {
            "value": "Elf",
            "label": "Elf"
        },
        {
            "value": "High Elf",
            "label": "High Elf"
        },
        {
            "value": "Gnome",
            "label": "Gnome"
        },
        {
            "value": "Rock Gnome",
            "label": "Rock Gnome"
        },
        {
            "value": "Half-Elf",
            "label": "Half-Elf"
        },
        {
            "value": "Half-Orc",
            "label": "Half-Orc"
        },
        {
            "value": "Halfling",
            "label": "Halfling"
        },
        {
            "value": "Lightfoot Halfling",
            "label": "Lightfoot Halfling"
        },
        {
            "value": "Human",
            "label": "Human"
        },
        {
            "value": "Tiefling",
            "label": "Tiefling"
        },
    ],
    "alignments": [
        {
            "value": "Lawful Good",
            "label": "Lawful Good"
        },
        {
            "value": "Neutral Good",
            "label": "Neutral Good"
        },
        {
            "value": "Chaotic Good",
            "label": "Chaotic Good"
        },
        {
            "value": "Lawful Neutral",
            "label": "Lawful Neutral"
        },
        {
            "value": "Neutral",
            "label": "Neutral"
        },
        {
            "value": "Chaotic Neutral",
            "label": "Chaotic Neutral"
        },
        {
            "value": "Lawful Evil",
            "label": "Lawful Evil"
        },
        {
            "value": "Neutral Evil",
            "label": "Neutral Evil"
        },
        {
            "value": "Chaotic Evil",
            "label": "Chaotic Evil"
        },
    ],
    "skills": [
        {
            "label": "Acrobatics",
            "ability": "dexterity",
        },
        {
            "label": "Animal Handling",
            "ability": "wisdom",
        },
        {
            "label": "Arcana",
            "ability": "intelligence",
        },
        {
            "label": "Athletics",
            "ability": "strength",
        },
        {
            "label": "Deception",
            "ability": "charisma",
        },
        {
            "label": "History",
            "ability": "intelligence",
        },
        {
            "label": "Insight",
            "ability": "wisdom",
        },
        {
            "label": "Intimidation",
            "ability": "charisma",
        },
        {
            "label": "Investigation",
            "ability": "intelligence",
        },
        {
            "label": "Medicine",
            "ability": "wisdom",
        },
        {
            "label": "Nature",
            "ability": "intelligence",
        },
        {
            "label": "Perception",
            "ability": "wisdom",
        },
        {
            "label": "Performance",
            "ability": "charisma",
        },
        {
            "label": "Persuasion",
            "ability": "charisma",
        },
        {
            "label": "Religion",
            "ability": "intelligence",
        },
        {
            "label": "Sleight of Hand",
            "ability": "dexterity",
        },
        {
            "label": "Stealth",
            "ability": "dexterity",
        },
        {
            "label": "Survival",
            "ability": "wisdom",
        },
    ],
    "dice": [
        {
            "label": "d20",
            "value": "d20"
        },
        {
            "label": "d12",
            "value": "d12"
        },
        {
            "label": "d10",
            "value": "d10"
        },
        {
            "label": "d8",
            "value": "d8"
        },
        {
            "label": "d6",
            "value": "d6"
        },
        {
            "label": "d4",
            "value": "d4"
        },
    ]
} %}

{% spaceless %}
<!DOCTYPE html>
<html 
    lang="{{ currentSite.language }}" 
    state="hard-loading" 
    {% if isDebug and currentUser and currentUser['admin'] or craft.app.config.env == 'dev' or craft.app.config.env == 'staging'  %}
        debug="true"
    {% endif %} 
    data-csrf="{{ craft.app.request.csrfToken }}" 
    data-environment="{{ craft.app.config.env }}" 
    data-ga-id=""
    data-server="{{ craft.app.config.env == 'dev' ? 'localhost' : '165.227.201.167' }}"
>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
        <meta name="referrer" content="origin-when-cross-origin" />
        
        <link rel="icon" type="image/png" href="{{ alias('@rootUrl')|trim('/') }}/favicon-16x16.png" sizes="16x16">
        <link rel="icon" type="image/png" href="{{ alias('@rootUrl')|trim('/') }}/favicon-32x32.png" sizes="32x32">
        <link rel="icon" type="image/png" href="{{ alias('@rootUrl')|trim('/') }}/favicon-96x96.png" sizes="96x96">

        <title>RFP + DND = ðŸ’–</title>
        <meta name="description" content="A D&D character sheet application built for the bois." />
        <link rel="home" href="{{ siteUrl }}" />

        <!-- Google Font -->
        <!-- <link rel="preload" href="https://fonts.googleapis.com/css?family=Roboto:300,500,700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'"> -->
        
        <!-- Critical colors -->
        <style>
            :root
            {
                font-size: 100%;
                
                --grey-800: #333;
                --background: #fff;
                --loading-bar: #51b1f6;
                --loading-bar-background: #163b52;
                --loading-background: #fafafa;
                --loading-font: #333;
            }
            @media (prefers-color-scheme: dark)
            {
                :root
                {
                    --grey-800: #fff;
                    --background: #232323;
                    --loading-bar-background: #163b52;
                    --loading-background: #232323;
                    --loading-font: #fff;
                }
            }
        </style>

        <!-- Loading animations -->
        <style>
            page-loading
            {
                width: 100vw;
                height: 100vh;
                display: flex;
                position: fixed;
                top: 0;
                left: 0;
                justify-content: center;
                align-items: center;
                flex-flow: column wrap;
                background-color: var(--loading-background);
                color: var(--grey-800);
                font-size: var(--text-xl);
                z-index: 1000000;
                user-select: none;
                pointer-events: none;
                cursor: wait;
                text-align: center;
                visibility: hidden;
                opacity: 0;
                transition: all 150ms 150ms ease-in-out;
            }
            html[state="hard-loading"] page-loading
            {
                visibility: visible;
                opacity: 1;
            }
            page-loading djinnjs-file-loading-message,
            page-loading djinnjs-file-loading-value
            {
                line-height: 1.618;
                display: inline-block;
                margin: 0 0.25rem 0.5rem;
                font-size: var(--text-lg);
                font-weight: 400;
                font-family: system-ui, BlinkMacSystemFont, -apple-system, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
                white-space: nowrap;
                opacity: 0.87;
                color: var(--loading-font);
            }
            page-loading page-loading-bar
            {
                width: 200px;
                height: 2px;
                position: relative;
                background-color: var(--loading-bar);
                overflow: hidden;
                display: block;
                box-shadow: inset 0 0 2px rgba(51,51,51,0.15);
            }
            page-loading page-loading-bar bar-one
            {
                left: -145%;
                position: absolute;
                box-sizing: border-box;
                width: 100%;
                height: 100%;
                animation: primaryBar 2s infinite linear;
            }
            page-loading page-loading-bar bar-one::before
            {
                content: "";
                background-color: var(--loading-bar-background);
                display: inline-block;
                box-sizing: border-box;
                position: absolute;
                width: 100%;
                height: 100%;
                animation: primaryScale 2s infinite linear;
            }
            page-loading page-loading-bar bar-two
            {
                left: -100%;
                position: absolute;
                width: 100%;
                box-sizing: border-box;
                height: 100%;
                animation: secondaryBar 2s infinite linear;
            }
            page-loading page-loading-bar bar-two::before
            {
                content: "";
                background-color: var(--loading-bar-background);
                display: inline-block;
                box-sizing: border-box;
                position: absolute;
                width: 100%;
                height: 100%;
                animation: secondaryScale 2s infinite linear;
            }
            page-loading resource-counter,
            page-loading resource-total
            {
                display: inline-block;
            }
            page-loading span.-slash
            {
                font-size:0.75rem;
                display:inline-block;
                margin:0 0.25rem;
                transform:translateY(-2px);
            }
            @keyframes primaryBar{
                0%{
                    transform: translateX(0);
                }
                20%{
                    transform: translateX(0);
                    animation-timing-function: cubic-bezier(.5,0,.70173,.49582);
                }
                59%{
                    transform: translateX(83.67142%);
                    animation-timing-function: cubic-bezier(.30244,.38135,.55,.95635);
                }
                100%{
                    transform: translateX(200.61106%);
                }
            }
            @keyframes secondaryBar{
                0%{
                    transform: translateX(0);
                    animation-timing-function: cubic-bezier(.15,0,.51506,.40969);
                }
                25%{
                    animation-timing-function: cubic-bezier(.31033,.28406,.8,.73371);
                    transform: translateX(37.65191%);
                }
                48.35%{
                    animation-timing-function: cubic-bezier(.4,.62704,.6,.90203);
                    transform: translateX(84.38617%);
                }
                100%{
                    transform: translateX(160.27778%);
                }
            }
            @keyframes primaryScale{
                0%{
                    transform: scaleX(.08);
                }
                36%{
                    animation-timing-function: cubic-bezier(.33473,.12482,.78584,1);
                    transform: scaleX(.08);
                }
                69%{
                    animation-timing-function: cubic-bezier(.06,.11,.6,1);
                    transform: scaleX(.66148);
                }
                100%{
                    transform: scaleX(.08);
                }
            }
            @keyframes secondaryScale{
                0%{
                    animation-timing-function: cubic-bezier(.20503,.05705,.57661,.45397);
                    transform: scaleX(.08);
                }
                19%{
                    animation-timing-function: cubic-bezier(.15231,.19643,.64837,1.00432);
                    transform: scaleX(.4571);
                }
                44%{
                    animation-timing-function: cubic-bezier(.25776,-.00316,.21176,1.38179);
                    transform: scaleX(.72796);
                }
                100%{
                    transform: scaleX(.08);
                }
            }
        </style>

		<!-- noscript CSS -->
        <noscript>
			<style>	
				page-loading {
					display: none;
                }
                img
                {
                    opacity: 1 !important;
                }
                #noscript-message
                {
                    position: fixed;
                    bottom: 0;
                    left: 50%;
                    transform: translateX(-50%);
                    padding: 1rem 1rem 1rem;
                    background-color: var(--background);
                    box-shadow: 0 -2px 16px rgba(51,51,51,0.1), -6px 32px rgba(51,51,51,0.1);
                    border-radius: 0.25rem 0.25rem 0 0;
                    text-align: center;
                    z-index: 2000;
                }
            </style>
            <link rel="stylesheet" href="{{ alias('@rootUrl')|trim('/') }}/assets/noscript.css">
            <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,500,700&display=swap">
        </noscript>

        <!-- Global site tag (gtag.js) - Google Analytics -->
        <!-- <script async src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"></script> -->

        <script>
            if (/Edge/.test(navigator.userAgent)) {
                document.write('<script src="https://unpkg.com/@webcomponents/webcomponentsjs@2.4.0/webcomponents-bundle.js"><\/script>');
            }

            if ("serviceWorker" in navigator) {
                navigator.serviceWorker
                    .register(`${window.location.origin}/service-worker.js`, { scope: "/" })
                    .then(() => {
                        /** Verify the service worker was registered correctly */
                        if (navigator.serviceWorker.controller) {
                            /** Tell the service worker to get the latest cachebust data */
                            navigator.serviceWorker.controller.postMessage({
                                type: "cachebust",
                                url: window.location.href,
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Registration failed with " + error);
                    });
            }
        </script>

        <script type="module" src="{{ alias('@rootUrl')|trim('/') }}/assets/runtime.mjs"></script>
        <script type="module" src="{{ alias('@rootUrl')|trim('/') }}/assets/socket-manager.mjs"></script>
        <script type="text/javascript" nomodule src="{{ alias('@rootUrl')|trim('/') }}/static/scripts/ie-warning.js"></script>
    </head>
    <body style="width:100vw;overflow-x:hidden;display:block;">
        {# Full screen loading animation #}
        <page-loading>
            <div>
                <djinnjs-file-loading-message>Loading page</djinnjs-file-loading-message>
                <djinnjs-file-loading-value></djinnjs-file-loading-value>
                <page-loading-bar>
                    <bar-one></bar-one>
                    <bar-two></bar-two>
                </page-loading-bar>
            </div>
        </page-loading>
        {# Infinite progress bar loading animation #}
        <soft-loading>
            <transition-bar-one></transition-bar-one>
            <transition-bar-two></transition-bar-two>
        </soft-loading>
        {# Page loading animation #}
        <page-transition>
            <page-transition-bar></page-transition-bar>
        </page-transition>
        {% block page %}{% endblock %}
        <noscript>
            <p id="noscript-message">{{ "Parts of this website require JavaScript. Please re-enable JavaScript and reload the page. We apologize for the inconvenience."|t }}</p>
        </noscript>
    </body>
</html>
{% endspaceless %}
