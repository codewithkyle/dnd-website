async function e(e){const s=e.match(/(lazy-load-css\=[\'\"].*?[\'\"])/gi);if(null===s||0===s.length)return[];const t=[];s&&s.map(e=>{const s=e.replace(/(lazy-load-css\=[\'\"])|[\'\"]$/g,"").trim().split(/\s+/g);s&&s.map(e=>{const s=e.trim().toLowerCase().replace(/(\.css)$|(\.scss)$/g,"");""!==s&&t.push(s)})});const a=[];for(let e=0;e<t.length;e++){let s=!0;for(let n=0;n<a.length;n++)t[e]===a[n]&&(s=!1);s&&a.push(t[e])}return a}async function s(e){const s=e.match(/(eager-load-css\=[\'\"].*?[\'\"])/gi);if(null===s||0===s.length)return[];const t=[];s&&s.map(e=>{const s=e.replace(/(eager-load-css\=[\'\"])|[\'\"]$/g,"").trim().split(/\s+/g);s&&s.map(e=>{const s=e.trim().toLowerCase().replace(/(\.css)$|(\.scss)$/g,"");""!==s&&t.push(s)})});const a=[];for(let e=0;e<t.length;e++){let s=!0;for(let n=0;n<a.length;n++)t[e]===a[n]&&(s=!1);s&&a.push(t[e])}return a}onmessage=t=>{switch(t.data.type){case"eager":s(t.data.body).then(e=>{postMessage({type:"eager",files:e})});break;case"lazy":e(t.data.body).then(e=>{postMessage({type:"lazy",files:e})});break;case"parse":(async function(t){const a=await s(t),n=await e(t),c={eager:a,lazy:[]};return n.map(e=>{a.includes(e)||c.lazy.push(e)}),c})(t.data.body).then(e=>{postMessage({type:"parse",pjaxFiles:e,requestUid:t.data.requestUid})})}};