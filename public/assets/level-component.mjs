import{message as e}from"./broadcaster.mjs";class t extends HTMLElement{constructor(){super(),this.calculateFromExperience=()=>{const t=parseInt(this.expInput.value),n=this.calculateLevel(t),c=this.calculateProficencyBonus(n),s=parseInt(this.profBonuesInput.value);this.levelInput.value=""+n,this.profBonuesInput.value=""+c,c-s!=0&&e("character-update",{type:"proficiency",difference:c-s})},this.levelInput=this.querySelector('input[name="fields[charLevel]"]'),this.expInput=this.querySelector('input[name="fields[exp]"]'),this.profBonuesInput=this.querySelector('input[name="fields[proficiencyBonus]"]')}calculateLevel(e){return e>=355e3?20:e>=305e3?19:e>=265e3?18:e>=225e3?17:e>=195e3?16:e>=165e3?15:e>=14e4?14:e>=12e4?13:e>=1e5?12:e>=85e3?11:e>=64e3?10:e>=48e3?9:e>=34e3?8:e>=23e3?7:e>=14e3?6:e>=6500?5:e>=2700?4:e>=900?3:e>=300?2:1}calculateProficencyBonus(e){return e>=1&&e<=4?2:e>=5&&e<=8?3:e>=9&&e<=12?4:e>=13&&e<=16?5:6}connectedCallback(){this.expInput.addEventListener("input",this.calculateFromExperience)}}customElements.define("level-component",t);