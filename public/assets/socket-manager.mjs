import{hookup as e,reply as t,message as i}from"./broadcaster.mjs";import s from"./socket.mjs";import{DiceRoller as o}from"./rpg-dice-roller.mjs";import{toast as n}from"./notifyjs.mjs";new class{constructor(){e("server",this.inbox.bind(this)),this.inRoom=!1,this.rollReplyId=null,this.initMapReplyId=null,this.dice=new o,this.socket=s(document.documentElement.dataset.server+":5876",{secure:!0,reconnection:!0}),this.socket.on("connect",()=>{this.isConnected=!0,this.time=performance.now(),this.countdown=15,this.tick()}),this.socket.on("disconnect",()=>{this.isConnected=!1}),this.socket.on("roll",e=>{t(this.rollReplyId,{type:"roll-results",results:e})}),this.socket.on("roll-notificaiton",e=>{let t=0;if(e.results.length>1)for(let i=0;i<e.results.length;i++)t+=parseInt(e.results[i]);n({title:`${e.character} rolled ${e.dice}`,message:`Result${0===t?"":"s"}: ${e.results}${0===t?"":" = "+t}`,closeable:!0,duration:6,icon:'<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="dice-six" class="svg-inline--fa fa-dice-six fa-w-14" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"></path></svg>'})}),this.socket.on("ping-player",()=>{n({title:"Combat Notice",message:"It's your turn for combat, make it count.",closeable:!0,duration:6,icon:'<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="swords" class="svg-inline--fa fa-swords fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M309.37 389.38l80-80L93.33 13.33 15.22.14C6.42-1.12-1.12 6.42.14 15.22l13.2 78.11 296.03 296.05zm197.94 72.68L448 402.75l31.64-59.03c3.33-6.22 2.2-13.88-2.79-18.87l-17.54-17.53c-6.25-6.25-16.38-6.25-22.63 0L307.31 436.69c-6.25 6.25-6.25 16.38 0 22.62l17.53 17.54a16 16 0 0 0 18.87 2.79L402.75 448l59.31 59.31c6.25 6.25 16.38 6.25 22.63 0l22.62-22.62c6.25-6.25 6.25-16.38 0-22.63zm-8.64-368.73l13.2-78.11c1.26-8.8-6.29-16.34-15.08-15.08l-78.11 13.2-140.05 140.03 80 80L498.67 93.33zm-345.3 185.3L100 332l-24.69-24.69c-6.25-6.25-16.38-6.25-22.62 0l-17.54 17.53a15.998 15.998 0 0 0-2.79 18.87L64 402.75 4.69 462.06c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L109.25 448l59.03 31.64c6.22 3.33 13.88 2.2 18.87-2.79l17.53-17.54c6.25-6.25 6.25-16.38 0-22.62L180 412l53.37-53.37-80-80z"></path></svg>',classes:["-green"]})}),this.socket.on("on-deck",()=>{n({title:"On Deck",message:"You're up next in the combat order.",closeable:!0,duration:6})}),this.socket.on("notify",e=>{n({title:e.title,message:e.message,closeable:!0,duration:6})}),this.socket.on("initiation-order",e=>{i("initiation-order",{type:"set-order",order:e})}),this.socket.on("clear-order",()=>{i("initiation-order",{type:"clear-order"})}),this.socket.on("update-initiation-index",e=>{i("initiation-order",{type:"update-initiation-index",index:e})}),this.socket.on("load-map",e=>{i("battle-map",{type:"load-map",url:e})}),this.socket.on("render-entities",e=>{i("battle-map",{type:"render-entities",entities:e})}),this.socket.on("init-map",e=>{i("battle-map",{type:"init-map",url:e.url,entities:e.entities,pins:e.pins,drawing:e.drawing})}),this.socket.on("ping-pos",e=>{i("pinger",{type:"ping",pos:e})}),this.socket.on("render-pins",e=>{i("battle-map",{type:"render-pins",pins:e})}),this.socket.on("render-drawing",e=>{i("dynamic-map",{type:"render",drawing:e})}),this.socket.on("clear-drawing",()=>{i("dynamic-map",{type:"clear"})})}inbox(e){var i;switch(e.type){case"update-entity":this.isConnected&&this.inRoom&&this.socket.emit("update-entity",{uid:e.uid,hp:e.hp,ac:e.ac});break;case"init-combat-order":this.isConnected&&this.inRoom&&this.socket.emit("init-combat-order");break;case"allow-player-input":this.isConnected&&this.inRoom&&this.socket.emit("toggle-player-input",e.allowPlayers);break;case"clear-dynamic-map":this.isConnected&&this.inRoom&&this.socket.emit("clear-drawing");break;case"render-drawing":this.isConnected&&this.inRoom&&this.socket.emit("render-drawing",e.drawing);break;case"remove-entity":this.isConnected&&this.inRoom&&this.socket.emit("remove-entity",e.uid);break;case"remove-pin":this.isConnected&&this.inRoom&&this.socket.emit("remove-pin",e.uid);break;case"add-entity":this.isConnected&&this.inRoom&&this.socket.emit("add-entity",{pos:e.pos,name:e.label,type:e.entityType,ac:e.ac,hp:e.hp});break;case"place-pin":this.isConnected&&this.inRoom&&this.socket.emit("place-pin",{pos:e.pos,label:e.label});break;case"send-ping":this.isConnected&&this.inRoom&&this.socket.emit("ping-pos",e.pos);break;case"init-map":this.isConnected&&this.inRoom&&this.socket.emit("init-map");break;case"load-map":this.isConnected&&this.inRoom&&this.socket.emit("load-map",e.url);break;case"send-position":this.isConnected&&this.inRoom&&this.socket.emit("update-position",e.entity);break;case"clear-order":this.isConnected&&this.inRoom&&this.socket.emit("clear-order");break;case"initiation-order":this.isConnected&&this.inRoom&&this.socket.emit("initiation-order",e.entities);break;case"combat-order-update":this.isConnected&&this.inRoom&&this.socket.emit("combat-order-update",e.uid);break;case"leave":this.socket.emit("leave"),this.inRoom=!1;break;case"join":this.inRoom||(this.socket.emit("join",{name:e.name,roomUid:e.campaign,characterUid:null!==(i=null==e?void 0:e.characterUid)&&void 0!==i?i:null}),this.inRoom=!0);break;case"roll-dice":this.rollReplyId=e.replyID,this.rollDice(e.dice);break;case"is-online":t(e.replyID,{type:"is-online",isOnline:this.isConnected,inRoom:this.inRoom})}}rollDice(e){setTimeout(()=>{if(this.isConnected&&this.inRoom)this.socket.emit("roll",e);else{let i=this.dice.roll(e).toString().match(/\[.*\]/g)[0].replace(/(\[)|(\])/g,"").split(",");Array.isArray(i)||(i=[...i]),t(this.rollReplyId,{type:"roll-results",results:i})}},this.getRandomInt(600,1300))}getRandomInt(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e))+e}tick(){const e=performance.now(),t=(e-this.time)/1e3;this.time=e,this.countdown-=t,this.countdown<=0&&(this.isConnected&&this.socket.emit("heartbeat"),this.countdown=15),window.requestAnimationFrame(this.tick.bind(this))}};